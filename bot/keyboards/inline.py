from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder


def time_slots_kb():
    kb = InlineKeyboardMarkup(inline_keyboard=[])
    
    # –î–æ–±–∞–≤—å—Ç–µ –∫–Ω–æ–ø–∫–∏ —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ —Å–ª–æ—Ç–∞–º–∏
    times = ["10:00", "12:00", "14:00", "16:00", "18:00", "20:00"]
    buttons = [
        InlineKeyboardButton(text=time, callback_data=f"time_{time}")
        for time in times
    ]
    
    kb.inline_keyboard = [buttons[i:i+3] for i in range(0, len(buttons), 3)]
    return kb

def confirm_button():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ", callback_data="confirmed")]
    ])


def dynamic_hours_kb() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    for hour in range(10, 22):  # –ü–æ—Å–ª–µ–¥–Ω—è—è –±—Ä–æ–Ω—å –Ω–∞ 21:00
        builder.button(text=f"{hour}:00", callback_data=f"time_{hour}:00")
    builder.adjust(4)  # 4 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥
    return builder.as_markup()

def duration_kb() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    for dur in range(1, 4):
        builder.button(text=f"{dur} —á", callback_data=f"duration_{dur}")
    builder.adjust(3)
    return builder.as_markup()


def place_kb() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.button(text="üìç –ó–∞–≤–µ–¥–µ–Ω–∏–µ 1 (–ü—Ä-—Ç –ü–æ–±–µ–¥–∏—Ç–µ–ª–µ–π 85)", callback_data="place_1")
    builder.button(text="üìç –ó–∞–≤–µ–¥–µ–Ω–∏–µ 2 (–ü—Ä-—Ç –î–∑–µ—Ä–∂–∏–Ω—Å–∫–æ–≥–æ 9)", callback_data="place_2")
    builder.adjust(1)  # –ü–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –≤ —Å—Ç—Ä–æ–∫–µ
    return builder.as_markup()
